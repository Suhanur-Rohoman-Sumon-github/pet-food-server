generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String
  role       Role
  created_at DateTime @default(now())
  isDeleted  Boolean  @default(false)
  status     Status?
  updated_at DateTime @updatedAt
  card       Json?    @default("[]")
  wishList   String[]
  compare    String[]
}

model Admin {
  id                 String   @id @default(uuid())
  name               String
  location           String
  email              String   @unique
  designation        String
  contactNo          String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  isDeleted          Boolean  @default(false)
  status             Status?  @default(inProgress)
  needPasswordChange Boolean  @default(false)
}

model Vendor {
  id                 String   @id @default(uuid())
  name               String
  location           String
  email              String
  designation        String
  contactNo          String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  isDeleted          Boolean  @default(false)
  status             Status?  @default(inProgress)
  needPasswordChange Boolean  @default(false)
  shop               Shop?
}

model Shop {
  id              String    @id @default(uuid())
  name            String
  location        String?   @default("")
  cover_photo     String?   @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReTLRC8Q2CHzfjB3HF-6QpGr5B9KGLxDancA&s")
  profile_picture String?   @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTmu97XQ8T7AglouJJvJnf_tDN5YzlwGuqwlA&s")
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  vendorId        String    @unique
  ratings         Int       @default(0)
  follower        Json?     @default("[]")
  products        Product[]
  vendor          Vendor    @relation(fields: [vendorId], references: [id])
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   Product[]
}

model Product {
  id             String    @id @default(uuid())
  name           String
  price          Float     @default(0.0)
  images         String[]  @default([])
  description    String?   @default("")
  category_id    String?
  created_at     DateTime? @default(now())
  discount_price Float?    @default(0.0)
  shop_id        String?
  stock_quantity Int       @default(0)
  reviews        Json?     @default("[]")
  Category       Category? @relation(fields: [category_id], references: [id])
  Shop           Shop?     @relation(fields: [shop_id], references: [id])
}

enum Role {
  ADMIN
  VENDOR
  USER
}

enum Status {
  inProgress
  Blocked
}
